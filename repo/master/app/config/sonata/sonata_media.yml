#
# more information can be found here http://sonata-project.org/bundles/media
#
parameters:
    # Sonata Admin Options
    sonata_media.cdn.host: /data/uploads/media
    sonata.media.admin.media.class: Application\Sonata\MediaBundle\Admin\MediaAdmin
    sonata.media.admin.gallery.class: Application\Sonata\MediaBundle\Admin\GalleryAdmin
    
sonata_media:
    db_driver:       doctrine_orm # | doctrine_mongodb
    default_context: story
    contexts:
        story:
            providers:
                - sonata.media.provider.image
            formats: ~

        avatar:
            providers:
                - sonata.media.provider.image
            formats: ~

    cdn:
        # define the public base url for the uploaded media
        server:
            path:      %sonata_media.cdn.host%

    filesystem:
        # define where the uploaded file will be stored
        local:
            directory:  %kernel.root_dir%/../../../data/uploads/media
            create:     true

    providers:
        file:
            resizer:    false
        image:
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.advanced.liip_imagine

    resizer:
        simple:
            mode:  inset

#
# The LiipImagineBundle can be used if you want to convert on demand an image
# to a specific format. (ie a controller render the file)
#    more information can be found here : https://github.com/liip/LiipImagineBundle
#
liip_imagine:
    driver:               gd 
    web_root:             %kernel.root_dir%/../../../
    data_root:            %kernel.root_dir%/../../../data/uploads/media
    cache_prefix:         data/uploads/media
    data_loader:          filesystem   
    filter_sets:
        # admin
        admin:
            quality: 100
            controller_action: 'ApplicationSonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [75, 65], mode: inset }
        # story
        story_detail_img:
            quality: 100
            controller_action: 'ApplicationSonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [410, 308], mode: outbound }
        # avatars
        avatar_profile_block:
            quality: 100
            controller_action: 'ApplicationSonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [48, 48], mode: outbound, allow_upscale: true }
doctrine:
    orm:
        entity_managers:
            default:
                mappings:
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
