security:
    encoders:
        Application\Sonata\UserBundle\Entity\User:
            algorithm: sha512
            encode_as_base64: false
            iterations: 1

    role_hierarchy:
        # Social
        ROLE_VK_USER: [ROLE_USER]
        ROLE_OK_USER: [ROLE_USER]
        ROLE_FACEBOOK_USER: [ROLE_USER]
        ROLE_REGISTERED: [ROLE_VK_USER, ROLE_OK_USER, ROLE_FACEBOOK_USER]
        # Admin
        ROLE_ADMIN:       ROLE_REGISTERED
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT, ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT, ROLE_REGISTERED]

    providers:
        chain_provider:
            chain:
#                providers: [ fos_userbundle, vk_provider, ok_provider]
                providers: [  fos_userbundle, vk_provider, fb_provider, ok_provider]
        fos_userbundle:
            id: fos_user.user_provider.username_email
        vk_provider:
            id: vk.user.provider
        ok_provider:
            id: ok.user.provider
        fb_provider:
            id: fb.user.provider

    firewalls:
        # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # This firewall is used to handle the admin login area
        # This part is handled by the Sonata User Bundle
        admin:
            pattern:      /admin(.*)
            context:        user
            form_login:
                provider:       fos_userbundle
                default_target_path: /admin/dashboard
                always_use_default_target_path: true
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:   /admin/logout
                target: /admin/login
            anonymous:    true

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern: ^/
#            form_login:
#                login_path: /user/login
#                check_path: /user/login_check
#                failure_path: /
#                provider: fos_userbundle
#                success_handler: firstlove.security.authentication_handler
#                failure_handler: firstlove.security.authentication_handler
            fb_firewall:
                check_path: /fb/login_check/
                login_path: /fb/login/
                use_forward: false
                failure_path: /fail
                always_use_default_target_path: true
                default_target_path: /user/connect/
                provider: chain_provider
            vk_firewall:
                check_path: /vk/login_check/
                login_path: /vk/login/
                use_forward: false
                failure_path: /
                always_use_default_target_path: true
                default_target_path: /user/connect/
                provider: chain_provider
            ok_firewall:
                check_path: /ok/login_check/
                login_path: /ok/login/
                use_forward: false
                failure_path: /
                always_use_default_target_path: true
                default_target_path: /user/connect/
                provider: chain_provider
            anonymous:    true
            logout:
                path: /logout
                target: /
#                handlers: ["fos_facebook.logout_handler"]
#        public:
#            form_login:
#                #login_path: /user/login
#                login_path: /
#                check_path: /user/login_check/
#                failure_path: /
#                
##                success_handler: oliport.security.authentication_handler
##                failure_handler: oliport.security.authentication_handler
#
#            anonymous: true
#            pattern: ^/.*
#            logout:
#                path: /user/logout
#                target: /
##                handlers: ["fos_facebook.logout_handler"]

    access_control:
        - { path: ^/user/connect, role: [ROLE_VK_USER, ROLE_OK_USER, ROLE_FACEBOOK_USER]}

        # Anonymous access for login/register/password reset
        - { path: ^/user/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Social confirm
        - { path: ^/user/social/confirm/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Registered user area
        - { path: ^/user, role: ROLE_REGISTERED }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        
        # Anonymous access for api
        - { path: ^/api, role: IS_AUTHENTICATED_ANONYMOUSLY }
